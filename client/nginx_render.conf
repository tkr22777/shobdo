worker_processes  1;

events {
    worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

  proxy_buffering    off;
  proxy_set_header   X-Real-IP $remote_addr;
  proxy_set_header   X-Forwarded-Proto $scheme;
  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_http_version 1.1;

  server {
    listen       80;
    server_name 127.0.0.1;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        # Support SPA routing - needed for Auth0 callback handling
        try_files $uri $uri/ /index.html;
    }

    # Support Auth0 callback
    location = /callback {
        root   /usr/share/nginx/html;
        try_files $uri /callback.html;
    }

    # Support profile page
    location = /profile {
        root   /usr/share/nginx/html;
        try_files $uri /profile.html;
    }

    # Support auth-check page
    location = /auth-check {
        root   /usr/share/nginx/html;
        try_files $uri /auth-check.html;
    }

    location /api/ {
        # Direct proxy to Render without using upstream
        proxy_pass https://shobdo.onrender.com/api/;
        
        # Complete SSL configuration with more options
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        
        # Override the Host header completely
        proxy_set_header Host shobdo.onrender.com;
        
        # Add necessary headers for proxying
        proxy_set_header Connection "";
        
        # Add CORS headers for API requests
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
  }
}
